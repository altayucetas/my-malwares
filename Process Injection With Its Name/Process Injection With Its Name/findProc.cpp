#include "findProc.h"

int procFind(const char* procName) {

	HANDLE hSnap;
	PROCESSENTRY32 pe;
	BOOL hResult;
	int pid = 0;

	// Taking snapshot of all currently running processes
	hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);

	// It is required to define pe.dwSize
	pe.dwSize = sizeof(PROCESSENTRY32);

	// Getting the first process from the taken snapshot
	hResult = Process32First(hSnap, &pe);

	// Searching for all processes and finding the value entered as a parameter to the function
	while (hResult) {

		if (strcmp(procName, (const char *)pe.szExeFile) == 0) {
			pid = pe.th32ProcessID;
			break;
		}
		else {
			hResult = Process32Next(hSnap, &pe);
		}
	}

	// Closing handle
	CloseHandle(hSnap);

	return pid;
}